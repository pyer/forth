#!help
To be continued

STANADRD
Nearly conform to
Forth 200x Standardisation Committee
Forth 2012 RC2
13th November, 2013


! ( x a-addr -- )
Store x at a-addr.
See also: @

!CSP
TBD

# ( ud1 -- ud2 )
Divide ud1 by the number in BASE giving the quotient ud2 and the remainder n. (n is the
least significant digit of ud1.) Convert n to external form and add the resulting character
to the beginning of the pictured numeric output string. An ambiguous condition exists if
# executes outside of a <# #> delimited number conversion.
See also: #> #S <#

#>
( xd -- c-addr u )
Drop xd. Make the pictured numeric output string available as a character string. c-addr
and u specify the resulting character string. A program may replace characters within
the string.
See also: # #S <#

#S ( xd -- c-addr u )
Drop xd. Make the pictured numeric output string available as a character string. c-addr
and u specify the resulting character string. A program may replace characters within
the string.
See also: #> # <#

$CWD

$EUID

$GID

$HOME

$PID

$UID

$USER

' ( " spaces name" -- xt )
Skip leading space delimiters. Parse name delimited by a space. Find name and return
xt, the execution token for name. An ambiguous condition exists if name is not found.
When interpreting, ’ xyz EXECUTE is equivalent to xyz.

( ( "ccc paren " -- )
Parse ccc delimited by ')' (right parenthesis). ( is an immediate word.
The number of characters in ccc may be zero to the number of characters in the parse area.

* ( n1 n2 -- n3 )
Multiply n1 by n2 giving the product n3.

+ ( n1 n2 -- n3 )
Add n2 to n1 giving the sum n3.

+! ( n a-addr -- )
Add n to the single-cell number at a-addr.

, ( x -- )
Reserve one cell of data space and store x in the cell. If the data-space pointer is aligned
when , begins execution, it will remain aligned when , finishes execution. An ambigu-
ous condition exists if the data-space pointer is not aligned prior to execution of ,.

- ( n1 n2 -- n3 )
Subtract n2 from n1 giving the difference n3.

. ( n -- )
Display n in free field format.
See also: ."

." ( "ccc quote " -- )
Parse and display ccc delimited by '"' (double-quote).
See also: .

.COPYRIGHT ( -- )
Display copyright information.

.LICENSE ( -- )
Display license information.
The basic PF system is licensed under the terms of the LGPL (Lesser GNU Public License)

.MEMORY
Display memory information.

.S
Display the stack contents.

.STATUS
Display the status of the current PF system.

.VERSION ( -- )
Display the version of the current PF system.

.WARRANTY ( -- )
Display a warranty information.
The basic PF system is licensed under the terms of the LGPL (Lesser GNU Public License)
which exludes almost any liabilities whatsoever - however loadable binary modules may
hook into the system and their functionality may have different WARRANTY infos.

/ ( n1 n2 -- n3 )
Divide n1 by n2, giving the single-cell quotient n3.
An ambiguous condition exists if n2 is zero.

/MOD ( n1 n2 -- r q )
Divide n1 by n2, giving the single-cell remainder r and the single-cell quotient q.
An ambiguous condition exists if n2 is zero.

0 ( -- 0 )
Constant.

0< ( n -- flag )
flag is true if and only if n is less than zero.

0<> ( n -- flag )
flag is true if and only if n is different from zero.

0= ( n -- flag )
flag is true if and only if n is equal to zero.

0> ( n -- flag )
flag is true if and only if n is greater than zero.

1 ( -- 1 )
Constant.

1+ ( n1 -- n2 )
Add one (1) to n1 giving the sum n2.

1- ( n1 -- n2 )
Subtract one (1) from n1 giving the difference n2.

2 ( -- 2 )
Constant.

2* ( n1 -- n2 )
n2 is the result of shifting n1 one bit toward the most-significant bit, filling the
vacated least-significant bit with zero.

2+ ( n1 -- n2 )
Add two (2) to n1 giving the sum n2.

2- ( n1 -- n2 )
Subtract two (2) from n1 giving the difference n2.

2/ ( n1 -- n2 )
n2 is the result of shifting n1 one bit toward the least-significant bit, leaving the
most-significant bit unchanged.

3 ( n1 -- n2 ) 
Constant.
 
: ( : “ spaces name” -- colon-sys )
Skip leading space delimiters. Parse name delimited by a space. Create a definition for
name, called a “colon definition”. Enter compilation state and start the current defini-
tion, producing colon-sys. Append the initiation semantics given below to the current
definition.
The execution semantics of name will be determined by the words compiled into the
body of the definition. The current definition shall not be findable in the dictionary until
it is ended (or until the execution of DOES> in some systems).
See also: ; CREATE DOES>

; ( -- )
Append the run-time semantics below to the current definition. End the current definition,
allow it to be found in the dictionary and enter interpretation state, consuming colon-sys.
If the data-space pointer is not aligned, reserve enough data space to align it.
See also: : CREATE DOES>

< ( n1 n2 -- flag )
flag is true if and only if n1 is less than n2.

<# ( -- )
Initialize the pictured numeric output conversion process.
See also: #> # #S

<>
TBD

<BUILDS
TBD

= ( n1 n2 -- flag )
flag is true if and only if n1 is bit-for-bit the same as n2.

> ( n1 n2 -- flag )
flag is true if and only if n1 is greater than n2.

>BODY ( xt -- a-addr )
a-addr is the data-field address corresponding to xt. An ambiguous condition exists if xt
is not for a word defined via CREATE.

>IN

>NAME

>NUMBER

>R ( x -- ) ( R: -- x )
Move x to the return stack.
See also: R@ R>

?COMP
TBD

?CSP
TBD

?DUP ( x -- 0 | x x )
Duplicate x if it is non-zero.

?EXEC
TBD

?FILE
TBD

?LOADING
TBD

?PAIRS
TBD

?STACK
TBD

@ ( a-addr -- x )
x is the value stored at a-addr.

ABORT ( i×x -- ) ( R: j×x -- )
Empty the data stack and perform the function of QUIT, which includes emptying the
return stack, without displaying a message.

ABORT" ( “ccc quote ” -- )
Parse ccc delimited by a " (double-quote). Append the run-time semantics given below
to the current definition.

ABS ( n -- u )
u is the absolute value of n.

ACCEPT ( c-addr +n1 -- +n2 )
Receive a string of at most +n1 characters. An ambiguous condition exists if +n1 is
zero or greater than 32,767. Display graphic characters as they are received. A program
that depends on the presence or absence of non-graphic characters in the string has an
environmental dependency. The editing functions, if any, that the system performs in
order to construct the string are implementation-defined.
Input terminates when an implementation-defined line terminator is received. When
input terminates, nothing is appended to the string, and the display is maintained in an
implementation-defined way.
+n2 is the length of the string stored at c-addr.

AGAIN


ALIGN ( -- )
If the data-space pointer is not aligned, reserve enough space to align it.
See also: ALIGNED

ALIGNED ( addr -- a-addr )
a-addr is the first aligned address greater than or equal to addr.
See also: ALIGN

ALLOT ( n -- )
If n is greater than zero, reserve n address units of data space. If n is less than zero,
release | n | address units of data space. If n is zero, leave the data-space pointer
unchanged.
If the data-space pointer is aligned and n is a multiple of the size of a cell when ALLOT
begins execution, it will remain aligned when ALLOT finishes execution.
If the data-space pointer is character aligned and n is a multiple of the size of a character
when ALLOT begins execution, it will remain character aligned when ALLOT finishes execution.

ALSO ( -- )
Transform the search order consisting of widn, . . . wid2, wid1 (where wid1 is searched
first) into widn, . . . wid2, wid1, wid1. An ambiguous condition exists if there are too many
word lists in the search order.

AND ( x1 x2 -- x3 )
x3 is the bit-by-bit logical "and" of x1 with x2.

BACKSPACE
TBD

BASE ( -- a-addr )
a-addr is the address of a cell containing the current number-conversion radix {{2...36}}.
See also: HEX DECIMAL

BEGIN ( -- )
Continue execution.
See also: REPEAT UNTIL WHILE

BIN
TBD

BL ( -- char )
char is the character value for a space.

C! ( char c-addr -- )
Store char at c-addr. When character size is smaller than cell size, only the number of
low-order bits corresponding to character size are transferred.

C, ( char -- )
Reserve space for one character in the data space and store char in the space. If the data-
space pointer is character aligned when C, begins execution, it will remain character
aligned when C, finishes execution. An ambiguous condition exists if the data-space
pointer is not character-aligned prior to execution of C,.

C@ ( c-addr -- char )
Fetch the character stored at c-addr. When the cell size is greater than character size, the
unused high-order bits are all zeroes.

CASE

CATCH

CD

CLOSE-FILE

COLS

COMPILE,

CONSTANT ( x “ spaces name” -- )
Skip leading space delimiters. Parse name delimited by a space. Create a definition for
name with the execution semantics defined below. name is referred to as a “constant”.
name Execution: ( -- x )
Place x on the stack.

CONTEXT
TBD

COUNT ( c-addr1 -- c-addr2 u )
Return the character string specification for the counted string stored at c-addr1. c-addr2
is the address of the first character after c-addr1. u is the contents of the character at
c-addr1, which is the length in characters of the string at c-addr2.

CR ( -- )
Cause subsequent output to appear at the beginning of the next line.

CREATE ( “ spaces name” -- )
Skip leading space delimiters. Parse name delimited by a space. Create a definition
for name with the execution semantics defined below. If the data-space pointer is not
aligned, reserve enough data space to align it. The new data-space pointer defines name’s
data field. CREATE does not allocate data space in name’s data field.
name Execution: ( -- a-addr )
a-addr is the address of name’s data field. The execution semantics of name may be
extended by using DOES>.
See also: DOES>

CREATE-FILE

CSP

CURRENT

DEBUG

DEFINITIONS ( -- )
Make the compilation word list the same as the first word list in the search order. Speci-
fies that the names of subsequent definitions will be placed in the compilation word list.
Subsequent changes in the search order will not affect the compilation word list.

DELETE-FILE

DEPTH

DO ( n1 n2 -- ) ( R: -- loop-sys )
Set up loop control parameters with index n2 and limit n1 . An ambiguous
condition exists if n1 and n2 are not both the same type. Anything already on the
return stack becomes unavailable until the loop-control parameters are discarded.
See also: +LOOP LOOP DO

DOES>
Compilation: ( C: colon-sys1 -- colon-sys2 )
Append the run-time semantics below to the current definition. Whether or not the cur-
rent definition is rendered findable in the dictionary by the compilation of DOES> is
implementation defined. Consume colon-sys1 and produce colon-sys2. Append the initi-
ation semantics given below to the current definition.
Run-time: ( -- ) ( R: nest-sys1 -- )
Replace the execution semantics of the most recent definition, referred to as name, with
the name execution semantics given below. Return control to the calling definition spec-
ified by nest-sys1. An ambiguous condition exists if name was not defined with CREATE
or a user-defined word that calls CREATE.
Initiation: ( i×x -- i×x a-addr ) ( R: -- nest-sys2 )
Save implementation-dependent information nest-sys2 about the calling definition. Place
name’s data field address on the stack. The stack effects i×x represent arguments to
name.
name Execution: ( i×x -- j×x )
Execute the portion of the definition that begins with the initiation semantics appended
by the DOES> which modified name. The stack effects i×x and j×x represent arguments
to and results from name, respectively.
See also: CREATE

DROP ( x -- )
Remove x from the stack.

DUMP
TBD

DUP ( x -- x x )
Duplicate x.

ELSE
Compilation: ( C: orig1 -- orig2 )
Put the location of a new unresolved forward reference orig2 onto the control flow stack.
Append the run-time semantics given below to the current definition. The semantics
will be incomplete until orig2 is resolved (e.g., by THEN). Resolve the forward reference
orig1 using the location following the appended run-time semantics.
Run-time: ( -- )
Continue execution at the location given by the resolution of orig2.
See also: IF THEN

EMIT ( x -- )
If x is a graphic character in the implementation-defined character set, display x. The
effect of EMIT for all other values of x is implementation-defined.
See also: TYPE

ENDCASE

ENDOF

ERASE

EXECUTE

FALSE

FILE-POSITION

FILE-SIZE

FILE-STATUS

FILL

FIND

FLUSH-FILE

FORGET

FORTH ( -- )
Transform the search order consisting of widn, . . . wid2, wid1 (where wid1 is searched
first) into widn, . . . wid2, wid(FORTH-WORDLIST).

FORTH-SIGNAL

FORTH-WORDLIST ( -- wid )
Return wid, the identifier of the word list that includes all standard words provided by
the implementation. This word list is initially the compilation word list and is part of the
initial search order.


HELP

HERE



HOLD ( char -- )

Add char to the beginning of the pictured numeric output string.

An ambiguous condition exists if HOLD executes outside of a <# #> delimited number conversion.



IF

IMMEDIATE

INCLUDE

INCLUDED

INVERT

KEY

LATEST

LITERAL

LL

LOAD-SIGNALS

LS

MARKER

MAX

MIN

MKDIR

MOD

MORE

MORE?

NEGATE

NIP

NO-DEBUG

NOT

OF

ONLY ( -- )
Set the search order to the implementation-defined minimum search order.
The minimum search order shall include the words FORTH-WORDLIST and SET-ORDER.

OPEN-FILE

OR

ORDER ( -- )
Display the word lists in the search order in their search order sequence, from first
searched to last searched. Also display the word list into which new definitions will
be placed. The display format is implementation dependent.
ORDER may be implemented using pictured numeric output words. Consequently, its
use may corrupt the transient region identified by #>.

OVER

PAD

PICK

PWD

R/O

R/W               

R>

R@

RAISE-SIGNAL

READ-FILE         

READ-LINE

RECURSIVE

REPEAT

REPOSITION-FILE

RESIZE-FILE

REVEAL

RM

ROLL

ROT

ROWS

SEE

SIGN

SOURCE

SPACE

SPACES

STATE

SWAP

SYSTEM

TAB

THEN

THROW

TOUCH

TRUE              

TUCK

TYPE

UMASK

UNTIL

VALUE

VARIABLE

VOCABULARY

W/O

WHILE

WITHIN

WORDS

WRITE-FILE        

WRITE-LINE

XOR

[

[']

[COMPILE]

\

]

